// <auto-generated> This file has been auto generated by StringCGE GeneradorCSharp. </auto-generated>
#nullable disable
using SGII_Back.Dominio.Shared.Entities;
using System.ComponentModel.DataAnnotations.Schema;
using System.ComponentModel.DataAnnotations;

using System;
using System.Collections.Generic;

namespace SGII_Back.Dominio.Entities;

public partial class AppUsuario: BaseEntity<int>
{
    /// <summary>
    /// 
    /// </summary>
    public string? UsuLogId { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public string? Pnombre { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public string? Snombre { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public string? Papellido { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public string? Sapellido { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public string? Cedula { get; set; }
    /// <summary>
    /// 
    /// </summary>
    public DateTime? Nacimiento { get; set; }
}


        //public async Task<IOperationResultList<PersonDto>> GetAll(PersonFilter filter)
        //{
        //    if (filter.Offset< 0)
        //        {
        //            filter.Offset = 0;
        //        }
        //    var query = _personRepository.All.Where(GetFilters(filter));
        //    var totalRecords = await query.CountAsync();
        //    var items = await query
        //        .Skip(filter.Offset)
        //        .Take(filter.Take)
        //        .Select(p => new PersonDto
        //        {
        //            // Map the necessary fields from Person to PersonDto
        //            IdentificationTypeId = p.IdentificationTypeId,
        //            Id = p.Id,
        //            FirstName = p.FirstName,
        //            SecondName = p.SecondName,
        //            LastName = p.LastName,
        //            SecondLastName = p.SecondLastName,
        //            Identification = p.Identification,
        //            NameCompleted = p.NameCompleted,
        //            Email = p.Email,
        //            Phone = p.Phone,
        //        })
        //        .ToListAsync();

        //    return new OperationResultList<PersonDto>(HttpStatusCode.OK, null, items, filter.Offset, filter.Take, totalRecords);
        //}
